.header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    padding: 1rem 2rem;
    z-index: 1000;
}

.icon-btn {
    background: none;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 50%;
    transition: background 0.3s ease;
}

.icon-btn:hover {
    background: rgba(255, 255, 255, 0.1);
}

.sidebar {
    position: fixed;
    top: 0;
    height: 100vh;
    background: rgba(0, 0, 0, 0.8);
    z-index: 999;
    padding: 5rem 2rem 2rem 2rem;
    animation: slideIn 0.3s ease;
}

.sidebar.closing {
    animation: slideOut 0.3s ease forwards;
}

.sidebar.frosted-backdrop {
    backdrop-filter: blur(10px) contrast(100%) brightness(100%);
    -webkit-backdrop-filter: blur(10px) contrast(100%) brightness(100%);
}

.search-sidebar {
    left: 0;
    width: 300px;
}

.menu-sidebar {
    right: 0;
    width: 250px;
}

.search-container {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
}

.search-icon {
    font-size: 1.2rem;
}

.search-input {
    background: none;
    border: none;
    color: white;
    font-size: 1rem;
    outline: none;
    flex: 1;
}

.search-input::placeholder {
    color: rgba(255, 255, 255, 0.6);
}

.search-results {
    margin-bottom: 2rem;
}

.search-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.5rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.album-placeholder {
    width: 40px;
    height: 40px;
    background: #333;
    border-radius: 4px;
}

.track-info {
    flex: 1;
}

.song-name {
    color: white;
    font-weight: 500;
    margin-bottom: 0.2rem;
}

.artist-name {
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
}

.add-btn, .remove-btn, .play-btn {
    background: none;
    border: none;
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    padding: 0.2rem;
    transition: all 0.2s ease;
}

.play-btn {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
}

.play-btn:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.1);
}

.album-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 0.5rem;
    margin-bottom: 2rem;
}

.grid-item {
    aspect-ratio: 1;
    background: #333;
    border-radius: 4px;
}

.sidebar-footer {
    position: absolute;
    bottom: 2rem;
    left: 2rem;
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
}

.menu-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.menu-item {
    color: white;
    padding: 0.5rem 0;
    cursor: pointer;
}

.menu-item.bold {
    font-weight: bold;
    font-size: 1.1rem;
}

.loading-message, .error-message {
    color: white;
    text-align: center;
    padding: 1rem;
    margin: 1rem 0;
}

.loading-message {
    color: rgba(255, 255, 255, 0.8);
}

.error-message {
    color: #ff6b6b;
    background: rgba(255, 107, 107, 0.1);
    border-radius: 4px;
}

.empty-state {
    text-align: center;
    color: rgba(255, 255, 255, 0.6);
    padding: 2rem;
}

.search-item {
    cursor: pointer;
    transition: background 0.2s ease;
}

.search-item:hover {
    background: rgba(255, 255, 255, 0.1);
}

.album-placeholder {
    width: 40px;
    height: 40px;
    background: #333;
    border-radius: 4px;
    flex-shrink: 0;
    object-fit: cover;
}

@keyframes slideIn {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0);
    }
}

@keyframes slideOut {
    from {
        transform: translateX(0);
    }
    to {
        transform: translateX(-100%);
    }
}

.menu-sidebar {
    animation: slideInRight 0.3s ease;
}

.menu-sidebar.closing {
    animation: slideOutRight 0.3s ease forwards;
}

@keyframes slideInRight {
    from {
        transform: translateX(100%);
    }
    to {
        transform: translateX(0);
    }
}

@keyframes slideOutRight {
    from {
        transform: translateX(0);
    }
    to {
        transform: translateX(100%);
    }
}
